:alias x v1
:alias y v2
:alias iter v3
:alias cr v4
:alias ci v5
:alias zr v6
:alias zi v7
:alias zr' v8
:alias zi' v9
:alias zd vA
:alias za vB
:macro ret A B { if A > 90 begin if A < 166 then return end if B > 127 then return }
: main
 vd := 0
 : start
 y := 0
 loop
  x := 0
	loop
	 va := 7
	 cr := x cr <<= cr cr &= va
	 ci := y ci <<= ci ci &= va
	 i := order i += cr
	 i += ci i += ci i += ci i += ci i += ci i += ci i += ci i += ci
	 load v0 vc := v0
	 l i := dot if iter < vc then sprite x y 1
	 x += 1
	if x != 64 then again
	y += 1
 if y != 32 then again
 
 vd += 1
 x := 0
 y := 0
 clear
 if vd == 5 then
 	jump 0x000
 jump start

: order
0 48 12 60 3 51 15 63 32 16 44 28 35 19 47 31 8 56 4 52 11 59 7 55 40 24 36 20 43 27 39 23 2 50 14 62 1 49 13 61 34 18 46 30 33 17 45 29 10 58 6 54 9 57 5 53 42 26 38 22 41 25 37 21
: l
 iter := vd
 cr := x 
 #cr <<= cr 
 ci := y 
 #ci <<= ci
 cr <<= cr 
 ci <<= ci
 cr <<= cr 
 ci <<= ci
 loop while iter != 0
 	cr >>= cr
 	ci >>= ci
	iter -= 1
 again
	
	
 zr := cr
 zi := ci
 loop
	i := sq i += zi i += zr load v0 zd := v0  # zd = (zr+zi)^2
  i := sq i += zr load v0 zr' := v0 za := v0 # zr' = zr^2
  i := sq i += zi load v0 zi' := v0 za += v0 # zi' = zi^2
	ret zr zr' ret zi zi'
	if za > 128 then return
	zi := zd zi -= za zi += ci # zi = zd - za + ci
	zr := zr' zr -= zi' zr += cr # zr = ( zr' - zi' ) + cr
  iter += 1
 if iter != 128 then again
;

: dot
0x80


: sq
0 0 0 0 0 0 1 1 2 2 3 3 4 5 6 7 8 9 10 11 12 13 15 16 18 19 21 22 24 26 28 30 32 34 36 38 40 42 45 47 50 52 55 57 60 63 66 69 72 75 78 81 84 87 91 94 98 101 105 108 112 116 120 124 128 132 136 140 144 148 153 157 162 166 171 175 180 185 190 195 200 205 210 215 220 225 231 236 242 247 253 2 8 14 20 26 32 38 44 50 56 62 69 75 82 88 95 101 108 115 122 129 136 143 150 157 164 171 179 186 194 201 209 216 224 232 240 248 0 248 240 232 224 216 209 201 194 186 179 171 164 157 150 143 136 129 122 115 108 101 95 88 82 75 69 62 56 50 44 38 32 26 20 14 8 2 253 247 242 236 231 225 220 215 210 205 200 195 190 185 180 175 171 166 162 157 153 148 144 140 136 132 128 124 120 116 112 108 105 101 98 94 91 87 84 81 78 75 72 69 66 63 60 57 55 52 50 47 45 42 40 38 36 34 32 30 28 26 24 22 21 19 18 16 15 13 12 11 10 9 8 7 6 5 4 3 3 2 2 1 1 0 0 0 0 0 0 0 0 0 0 0 1 1 2 2 3 3 4 5 6 7 8 9 10 11 12 13 15 16 18 19 21 22 24 26 28 30 32 34 36 38 40 42 45 47 50 52 55 57 60 63 66 69 72 75 78 81 84 87 91 94 98 101 105 108 112 116 120 124 128 132 136 140 144 148 153 157 162 166 171 175 180 185 190 195 200 205 210 215 220 225 231 236 242 247 253 2 8 14 20 26 32 38 44 50 56 62 69 75 82 88 95 101 108 115 122 129 136 143 150 157 164 171 179 186 194 201 209 216 224 232 240 248 0 248 240 232 224 216 209 201 194 186 179 171 164 157 150 143 136 129 122 115 108 101 95 88 82 75 69 62 56 50 44 38 32 26 20 14 8 2 253 247 242 236 231 225 220 215 210 205 200 195 190 185 180 175 171 166 162 157 153 148 144 140 136 132 128 124 120 116 112 108 105 101 98 94 91 87 84 81 78 75 72 69 66 63 60 57 55 52 50 47 45 42 40 38 36 34 32 30 28 26 24 22 21 19 18 16 15 13 12 11 10 9 8 7 6 5 4 3 3 2 2 1 1 0 0 0 0 0 

# #include <stdio.h>
# #include <stdint.h>
# #define u8 uint8_t
# int main() {
#    for (float i=0;i<256;i++) {
#       float k = i;
#       if (i>128) k = 256-(i);
#       u8 j = (k*k)/32;
#       printf("%d ",j);
#    }
#    for (float i=0;i<256;i++) {
#       float k = i;
#       if (i>128) k = 256-(i);
#       u8 j = (k*k)/32;
#       printf("%d ",j);
#   }
#   return 0;
# }